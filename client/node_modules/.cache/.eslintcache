[{"/Users/raghav.g/Documents/Development/Postgres project/client/src/index.js":"1","/Users/raghav.g/Documents/Development/Postgres project/client/src/App.jsx":"2","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Header.jsx":"3","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/TransactionHist.jsx":"4","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Buttons.jsx":"5","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Login.jsx":"6","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Footer.jsx":"7","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Register.jsx":"8","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/DataFetch.jsx":"9","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Trade.jsx":"10"},{"size":145,"mtime":1656533468954,"results":"11","hashOfConfig":"12"},{"size":984,"mtime":1656923221272,"results":"13","hashOfConfig":"12"},{"size":263,"mtime":1656925481083,"results":"14","hashOfConfig":"12"},{"size":1775,"mtime":1656914241487,"results":"15","hashOfConfig":"12"},{"size":2172,"mtime":1656924978944,"results":"16","hashOfConfig":"12"},{"size":2033,"mtime":1656911355963,"results":"17","hashOfConfig":"12"},{"size":141,"mtime":1656705392315,"results":"18","hashOfConfig":"12"},{"size":2241,"mtime":1656923221272,"results":"19","hashOfConfig":"12"},{"size":4334,"mtime":1656964942590,"results":"20","hashOfConfig":"12"},{"size":4459,"mtime":1656965605163,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10xwea4",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/raghav.g/Documents/Development/Postgres project/client/src/index.js",[],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/App.jsx",["55"],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Header.jsx",["56","57"],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/TransactionHist.jsx",[],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Buttons.jsx",["58"],[],"import React from \"react\";\nimport DataFetch from \"./DataFetch\";\nimport {NavLink,useNavigate} from \"react-router-dom\";\n\nfunction Button(){\n\n    const navigate=useNavigate();\n    \n    // const [btc,setbtc]=React.useState(false)\n    // const [eth,seteth]=React.useState(false)\n    // const [bat,setbat]=React.useState(false)\n    // const [xrp,setxrp]=React.useState(false)\n    // const [ada,setada]=React.useState(false)\n\n    const [coin,setCoin]=React.useState(\"\");\n\n    // Previous state restore \n    React.useEffect(()=>{\n        const prevdata=localStorage.getItem(\"coins-data\")\n        if(prevdata){\n            setCoin(JSON.parse(prevdata))\n            // console.log(JSON.parse(prevdata))\n        }\n    },[])\n\n    // stroing previous state\n    React.useEffect(()=>{\n        localStorage.setItem(\"coins-data\",JSON.stringify(coin))\n    })\n\n    return (\n        <div>\n         <button type=\"button\" className=\"btn btn-primary bt btmargin\" onClick={()=>setCoin(\"btc\")}>BTC-USDT</button>\n         <button type=\"button\" className=\"btn btn-primary bt btmargin\" onClick={()=>setCoin(\"eth\")}>ETH-USDT</button>\n         <button type=\"button\" className=\"btn btn-primary bt btmargin\" onClick={()=>setCoin(\"bat\")}>BAT-USDT</button>\n         <button type=\"button\" className=\"btn btn-primary bt btmargin\" onClick={()=>setCoin(\"xrp\")}>XRP-USDT</button>\n         <button type=\"button\" className=\"btn btn-primary bt btmargin\" onClick={()=>setCoin(\"ada\")}>ADA-USDT</button>\n         <button type=\"button\" className=\"btn btn-dark bt btmargin\" style={{float:\"right\"}} onClick={()=>{navigate(\"/\")}} >Logout</button>\n         {coin===\"btc\"?<DataFetch id=\"btc\"/>:\"\"}\n         {coin===\"eth\"?<DataFetch id=\"eth\"/>:\"\"}\n         {coin===\"bat\"?<DataFetch id=\"bat\"/>:\"\"}\n         {coin===\"xrp\"?<DataFetch id=\"xrp\"/>:\"\"}\n         {coin===\"ada\"?<DataFetch id=\"ada\"/>:\"\"}\n          {/* transactions button */}\n         <button type=\"button\" className=\"btn btn-dark btmargin\"><NavLink className=\"col\" to =\"/TransactionHist\">Go to Transaction History</NavLink> </button>\n         </div>\n    )\n}\n\nfunction reload(){\n    window.location.reload(true);\n}\n\n// setTimeout(reload,10000);\n\nexport default Button","/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Login.jsx",["59","60"],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Footer.jsx",[],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Register.jsx",["61","62"],[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/DataFetch.jsx",["63","64","65","66","67"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Trade from \"./Trade\"\n\n\nfunction DataFetch(props){\n    const[post,setPost]=React.useState([]);\n\n\n    const [click,setClick]=useState(false);\n    const [text,setText]=useState(\"\");\n    const [exchage,setExchange]=useState(\"\");\n    const [price,setPrice]=useState(0);\n    const [tb, setTb] = useState([]);\n\n    var pp=price;\n\n// getting data from databade\n   useEffect(()=>{\n    // function data_getter(){\n        axios.get(`/${props.id}`)\n        .then(res=>{\n            // console.log(res);\n            setPost(res.data.rows);\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    // }\n\n    },[])\n\n\n\n    async function data_getter(){\n        await axios.get(`/${props.id}`)\n        .then(res=>{\n            // console.log(res);\n            setPost(res.data.rows);\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n\n        // price_updater();\n    }\n\n    setTimeout(data_getter,5000);\n\n\n    function price_updater(){\n        let obj=post.find( o => o.exc===exchage);\n        if(obj){\n            setPrice(obj.price);\n        }\n    }\n\n    setTimeout(price_updater,5000);\n\n\n    // setTimeout(price_updater,3000);\n\n    // React.useEffect(()=>{\n    //         console.log(price);\n    // },[post])\n\n        // React.useEffect(()=>{\n        // const prevdata=localStorage.getItem(\"coins-data\")\n        // if(prevdata){\n        //     setPost(JSON.parse(prevdata))\n        //     console.log(JSON.parse(prevdata))\n        // }\n        // // const cl=localStorage.getItem(\"cl\");\n        // // if(cl){\n        // //     setClick(JSON.parse(cl));\n        // //     console.log(cl);\n        // // }\n    // },[post])\n\n    // React.useEffect(()=>{\n    //     console.log(\"DataFEtc\")\n    //     localStorage.setItem(\"coins-data\",JSON.stringify(post))\n    //     localStorage.setItem(\"cl\",JSON.stringify(click))\n    // },[post])\n\n    // the price is not getting updated \n    \n    \n    function cmp(a,b){\n        if(a.price<b.price){\n       return -1\n       }\n       return 0;\n       \n    }\n\n    if(post){\n        // console.log(\"heelo world\")\n        post.sort(cmp);\n    }\n\n    // console.log(post);\n\n    return(\n        <div>         \n            <table className=\"table\" style={{marginTop:\"1.5rem\"}}>\n                <thead className=\"tablecolor\">\n                    <tr>\n                        <th>Coin</th>\n                        <th>Price</th>\n                        <th>Exchange</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {/* {console.log(post.rows)}; */}\n                    {post.map((x,idx)=>(\n                        <tr key={idx} className=\"tablemargin\">\n                            <td>{x.id}</td>\n                            <td>{x.price}</td>\n                            <td>{x.exc}</td>\n                            <td style={{width:\"316px\"}}>\n\n                            <button type=\"button\" className=\"btn btn-outline-success mari\" onClick={()=>{\n                                setClick(true);\n                                setText(\"Buy\")\n                                setExchange(x.exc)\n                                setPrice(x.price)\n                                 // console.log(x.price);\n                            }}> Buy</button>\n                            <button type=\"button\" className=\"btn btn-outline-danger mari\" onClick={()=>{\n                                setClick(true);\n                                setText(\"Sell\")\n                                setExchange(x.exc)\n                                setPrice(x.price)\n                                // func(x.price);\n                                // setTimeout(setPrice(x.price),1000);\n                            }}>Sell</button>\n                            </td>\n                        {/* {console.log(x.price)} */}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n           {/* { console.log(price)} */}\n            {click===true && text.length>0? <Trade action={text} coin={props.id} exchange={exchage} price={price}/>:null}\n        </div>\n    )\n}\n\nfunction reload(){\n    window.location.reload(true);\n}\n\n// setTimeout(reload,5000);\n\nexport default DataFetch;",[],"/Users/raghav.g/Documents/Development/Postgres project/client/src/Components/Trade.jsx",["68","69","70","71","72","73","74"],[],{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"75","severity":1,"message":"80","line":2,"column":22,"nodeType":"77","messageId":"78","endLine":2,"endColumn":29},{"ruleId":"75","severity":1,"message":"81","line":50,"column":10,"nodeType":"77","messageId":"78","endLine":50,"endColumn":16},{"ruleId":"75","severity":1,"message":"82","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":2,"column":33,"nodeType":"77","messageId":"78","endLine":2,"endColumn":39},{"ruleId":"75","severity":1,"message":"82","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":3,"column":33,"nodeType":"77","messageId":"78","endLine":3,"endColumn":39},{"ruleId":"75","severity":1,"message":"84","line":14,"column":12,"nodeType":"77","messageId":"78","endLine":14,"endColumn":14},{"ruleId":"75","severity":1,"message":"85","line":14,"column":16,"nodeType":"77","messageId":"78","endLine":14,"endColumn":21},{"ruleId":"75","severity":1,"message":"86","line":16,"column":9,"nodeType":"77","messageId":"78","endLine":16,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":31,"column":7,"nodeType":"89","endLine":31,"endColumn":9,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"81","line":151,"column":10,"nodeType":"77","messageId":"78","endLine":151,"endColumn":16},{"ruleId":"75","severity":1,"message":"91","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":11},{"ruleId":"75","severity":1,"message":"92","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"93","line":16,"column":12,"nodeType":"77","messageId":"78","endLine":16,"endColumn":17},{"ruleId":"75","severity":1,"message":"94","line":16,"column":18,"nodeType":"77","messageId":"78","endLine":16,"endColumn":26},{"ruleId":"75","severity":1,"message":"95","line":18,"column":12,"nodeType":"77","messageId":"78","endLine":18,"endColumn":17},{"ruleId":"87","severity":1,"message":"96","line":23,"column":5,"nodeType":"97","endLine":23,"endColumn":20,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":39,"column":7,"nodeType":"89","endLine":39,"endColumn":9,"suggestions":"100"},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'NavLink' is defined but never used.","'reload' is defined but never used.","'Navigate' is defined but never used.","'Outlet' is defined but never used.","'tb' is assigned a value but never used.","'setTb' is assigned a value but never used.","'pp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'Box' is defined but never used.","'Button' is defined but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'price' is assigned a value but never used.","React Hook useEffect contains a call to 'setPrice'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.price] as a second argument to the useEffect Hook.","MemberExpression",["102"],"React Hook React.useEffect has missing dependencies: 'props.coin' and 'props.exchange'. Either include them or remove the dependency array. If 'setpairprice' needs the current value of 'props.exchange', you can also switch to useReducer instead of useState and read 'props.exchange' in the reducer.",["103"],{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [props.id]",{"range":"110","text":"111"},"Add dependencies array: [props.price]",{"range":"112","text":"113"},"Update the dependencies array to be: [props.coin, props.exchange]",{"range":"114","text":"115"},[703,705],"[props.id]",[678,678],", [props.price]",[1111,1113],"[props.coin, props.exchange]"]